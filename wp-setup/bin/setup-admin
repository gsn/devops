#!/bin/bash

# Include library
source gsn_echo.sh
for gsn_include in $(find lib/ -iname "*.sh"); do
  source $PWD/$gsn_include
done

CWD=$PWD
GSN_ADMINER_VERSION=4.1.0
GSN_PHP_USER=www-data

# execute in home directory

if [ ! -d ~/gsn-git ]; then
  gsn_lib_echo "create gsn git directory"
  mkdir ~/gsn-git
fi

if [ ! -d ~/gsn-git/wp-skeleton ]; then
  gsn_lib_echo "clone the gsn wp repo"
  git clone --recursive https://github.com/gsn/wp-skeleton.git ~/gsn-git/wp-skeleton

fi

if [ ! -d /mnt/sharefs ]; then
  gsn_lib_echo "install nfs requirements"
  apt-get -y --force-yes install nfs-kernel-server

  gsn_lib_echo "create a mount point"
  mkdir /mnt/sharefs

  read -e -p "Enter EBS device location suggest (/dev/xvdf):" -i "" $EBS_DRIVE
  if [ ! -z "$EBS_DRIVE" ]; then
    mkfs -t ext4 $EBS_DRIVE

    gsn_lib_echo "mount the attached $EBS_DRIVE to /mnt/sharefs"
    mount /dev/xvdf /mnt/sharefs

    gsn_lib_echo "give permission to access the drive to the worker(s)"
    echo "\n/mnt/sharefs 10.0.0.0/16(rw,sync,no_subtree_check)" >> /etc/exports

    service nfs-kernel-server restart
  fi
fi


if [ ! -d /mnt/sharefs/wordpress ]; then
  gsn_lib_echo "creating wordpress and internal admin folders"
  mkdir /mnt/sharefs/wordpress
  mkdir /mnt/sharefs/admin
  mkdir /mnt/sharefs/admin/htdocs

  gsn_lib_echo "move the wordpress files"

  cd ~/gsn-git/wp-skeleton
  rsync -av ./ /mnt/sharefs/wordpress/ --exclude '.g*' -exclude-from '.gitignore'
  cp wp-config-sample.php /mnt/sharefs/wordpress/htdocs/wp-config-sample.php
  cd $CWD


  # Setup SSL
  # Create SSL certificate directory
  if [ ! -d /mnt/sharefs/admin/cert ]; then
    mkdir /mnt/sharefs/admin/cert

    # Generate SSL key
    gsn_lib_echo "Generating SSL private key"
    openssl genrsa -out /mnt/sharefs/admin/cert/admin.key 2048

    gsn_lib_echo "Generating a certificate signing request (CSR)"
    openssl req -new -batch -subj /commonName=127.0.0.1/ -key /mnt/sharefs/admin/cert/admin.key -out /mnt/sharefs/admin/cert/admin.csr

    gsn_lib_echo "Removing pass phrase from SSL private key"
    mv /mnt/sharefs/admin/cert/admin.key /mnt/sharefs/admin/cert/admin.key.org
    openssl rsa -in /mnt/sharefs/admin/cert/admin.key.org -out /mnt/sharefs/admin/cert/admin.key

    gsn_lib_echo "Generating SSL certificate"
    openssl x509 -req -days 3652 -in /mnt/sharefs/admin/cert/admin.csr -signkey /mnt/sharefs/admin/cert/admin.key -out /mnt/sharefs/admin/cert/admin.crt

  fi

  gsn_install_utils
  gsn_install_adminer

  gsn_lib_echo "give permissions and set folders to 755 and all files to 644"
  chown -R $GSN_PHP_USER:$GSN_PHP_USER /mnt/sharefs
  # set all folders to 755 and all files to 644
  find /mnt/sharefs/ -type d -exec chmod 755 {} \;
  find /mnt/sharefs/ -type f -exec chmod 644 {} \;
fi

sed -i -e "s/pm.max_children\s*=\s*40/pm.max_children = 80/g" /etc/php5/fpm/pool.d/www.conf
sed -i -e "s/pm.start_servers\s*=\s*4/pm.start_servers = 8/g" /etc/php5/fpm/pool.d/www.conf
sed -i -e "s/pm.min_spare_servers\s*=\s*4/pm.min_spare_servers = 8/g" /etc/php5/fpm/pool.d/www.conf
sed -i -e "s/pm.max_spare_servers\s*=\s*20/pm.max_spare_servers = 32/g" /etc/php5/fpm/pool.d/www.conf
sed -i -e "s/pm.max_requests\s*=\s*200/pm.max_requests = 800/g" /etc/php5/fpm/pool.d/www.conf

echo "************ restart nginx"
service php5-fpm restart
service nginx restart
